<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.3" reference="GitLab.Code.GitLabConfigSheet" locale="">
  <web>GitLab.Code</web>
  <name>GitLabConfigSheet</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1514761200000</creationDate>
  <parent>xwiki:GitLab.Code.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1514761200000</date>
  <contentUpdateDate>1514761200000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.0</syntaxId>
  <hidden>false</hidden>
  <content>{{velocity output="false"}}
#if($request.action=="compare")
  #template('diff_macros.vm')
#end
{{/velocity}}

{{velocity}}
#if ("$!request.action" == "compare")
= $services.localization.render('gitlab.configsheet.compare.title'): $request.page =
#else
= $services.localization.render('gitlab.configsheet.title'): $doc.documentReference.name =
#end

#if(!$xwiki.hasProgrammingRights())
  #warning("This application cannot work without programming rights on the current page. Resave this page as an admin and retry.")
#else
#set($configLoaded = "")
#if(!$request.action)
  #set($class = $doc.getObject('GitLab.Code.GitLabConfigClass').xWikiClass)
  #set($authobj = $doc.getObject("GitLab.Code.GitLabAuthClass", "contextuser", $xcontext.user))
  #if(!$authobj)
    #set($authobj = $doc.newObject("GitLab.Code.GitLabAuthClass"))
    #if($xcontext.action=="edit")
      #set($ok = $doc.use($authobj))
      #set($ok = $doc.set("contextuser", $xcontext.user))
      #set($ok = $doc.use("GitLab.Code.GitLabConfigClass"))
      #set($ok = $doc.save())
    #end
  #end
  {{html clean="false" wiki="true"}}
    #foreach($prop in $class.properties)
      #set($tooltip = $prop.propertyClass.getTooltip($xcontext.context))
      ; &lt;label#if ($xcontext.action == 'edit') for="GitLab.Code.GitLabClass_0_${prop.name}"#end&gt;$escapetool.xml($doc.displayPrettyName($prop.name, false, false))&lt;/label&gt;
      : $doc.display($prop.name)
      #if($prop.name=="gitlab_url" &amp;&amp; $xcontext.action=="edit")
        #set($ok = $doc.use($authobj))
        ; &lt;label#if ($xcontext.action == 'edit') for="GitLab.Code.GitAuthClass_${authobj.number}_${prop.name}"#end&gt;$escapetool.xml($doc.displayPrettyName("token", false, false))&lt;/label&gt;
        : $doc.display("token")
        #set($ok = $doc.set("contextuser", $xcontext.user))
        $doc.display("contextuser", "hidden")
        #set($ok = $doc.use("GitLab.Code.GitLabConfigClass"))
      #end
    #end
  {{/html}}
#else
  #set($gitlabgroovy = $xwiki.parseGroovyFromPage("GitLab.Code.GitLabGroovy","GitLab.Code.GitLabGroovy"))
  #set($ok = $gitlabgroovy.setXWiki($xwiki, $xcontext, $services))
  #if(!$gitlabgroovy.hasProgrammingRights())
     #warning("This application cannot work without programming rights on [[GitLab.Code.GitLabGroovy]]. Resave this page as an admin and retry.")
  #end
  #set($configLoaded = $gitlabgroovy.setGitLabConfig($doc.fullName))
  #if($request.spaces)
    #set($spaces = $request.spaces)
    #set($savedlist = "")
  #else
    #set($savedlist = $gitlabgroovy.getSavedList())
    #set($spaces = $gitlabgroovy.getDefaultSpace())
  #end
#end
#if($configLoaded!="")
  ## it was not possible to connect to gitlab
  $configLoaded
#else
  ## CUSTOM action
  #if($request.action=="custom")
    {{html wiki=true clean=false}}
      &lt;form action="" method="get"&gt;
        &lt;input type="hidden" name="action" value="list" /&gt;
        $services.localization.render('gitlab.configsheet.custom.spacelist'): &lt;input type="text" name="spaces" value="" /&gt;&lt;input type="submit" value="$services.localization.render('gitlab.configsheet.listpages')" /&gt;
      &lt;/form&gt;
      &lt;form action="" method="get"&gt;
        &lt;input type="hidden" name="action" value="list" /&gt;
        $services.localization.render('gitlab.configsheet.custom.space'): &lt;select name="spaces"&gt;
        #foreach($space in $xwiki.spaces)
          &lt;option value="$space"&gt;$space&lt;/option&gt;
        #end
        &lt;/select&gt;
        &lt;input type="submit" value="$services.localization.render('gitlab.configsheet.listpages')" /&gt;
      &lt;/form&gt;
    {{/html}}
  ## LIST ACTION
  #elseif($request.action=="list")
    #macro(displayEntry $status)
          &lt;tr&gt;
            &lt;td width="20px" align="center" style="line-height: 1;border: none;"&gt;
              &lt;input type="checkbox" name="page" value="${status.fullname}.$!{status.language}" /&gt;
            &lt;/td&gt;
            &lt;td width="20px" align="center" style="line-height: 1;border: none;"&gt;
              &lt;span class="label label-default"&gt;$status.status&lt;/span&gt;
            &lt;/td&gt;
            &lt;td valign="middle" style="line-height: 1;border: none;"&gt;
              &lt;a href="$xwiki.getURL($status.fullname, 'view', "language=${status.language}")" target="_blank"&gt;${page}&lt;/a&gt;
            &lt;/td&gt;
          #if($status.status!="N")
            &lt;td width="125px" align="center" style="line-height: 1;border: none;"&gt;
              &lt;div class="btn-group" style="margin-top:0px; margin-bottom:0px"&gt;
                &lt;a class="btn btn-xs btn-default" title="$services.localization.render('gitlab.configsheet.viewdiff')" href="$xwiki.getURL($doc,'view',"action=compare&amp;page=${status.fullname}&amp;gitlablanguage=${status.language}&amp;spaces=$!{spaces}&amp;filePath=${status.filePath}")" role="button" rel="nofollow" target="_blank"&gt;
                  &lt;span class="fa fa-not-equal"&gt;&lt;/span&gt;
                  &lt;span class="btn-label"&gt;$services.localization.render('gitlab.configsheet.viewdiff')&lt;/span&gt;
                &lt;/a&gt;
                &lt;button type="button" class="btn btn-xs btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"&gt;
                  &lt;span class="caret"&gt;&lt;/span&gt;
                  &lt;span class="sr-only"&gt;Toggle dropdown&lt;/span&gt;
                &lt;/button&gt;
                &lt;ul class="dropdown-menu dropdown-menu-right"&gt;
                  &lt;li&gt;
                    &lt;a title="$services.localization.render('gitlab.configsheet.viewdiffunformatted')" href="$xwiki.getURL($doc,'view',"action=compare&amp;page=${status.fullname}&amp;gitlablanguage=${status.language}&amp;spaces=$!{spaces}&amp;filePath=${status.filePath}&amp;unformatted=1")" rel="nofollow" target="_blank"&gt;
                      &lt;span class="fa fa-not-equal"&gt;&lt;/span&gt; $services.localization.render('gitlab.configsheet.viewdiffunformatted')
                    &lt;/a&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/div&gt;
            &lt;/td&gt;
          #else
            &lt;td&gt;&lt;/td&gt;
          #end
    #end
    #macro(listActions)
            &lt;input class="btn btn-primary" type="submit" name="commit" value="$services.localization.render('gitlab.configsheet.commitall')" /&gt; &lt;input class="btn btn-warning" type="submit" name="update" value="$services.localization.render('gitlab.configsheet.updateall')" /&gt; &lt;input class="btn btn-default" type="submit" name="export" value="$services.localization.render('gitlab.configsheet.exportall')" /&gt;
    #end

    {{html wiki=true clean=false}}
      &lt;form action="$doc.documentReference.name"  method="post"&gt;
        &lt;input type="hidden" name="action" value="commit" /&gt;
        &lt;input type="hidden" name="spaces" value="$!{spaces}" /&gt;
        #listActions()
        &lt;table cellpadding="0" cellspacing="0" border="0" style="margin-bottom: 0px; margin-top: 20px;"&gt;
          &lt;tr&gt;
            &lt;th width="20px"&gt;&lt;/th&gt;
            &lt;th width="20px"&gt;&lt;/th&gt;
            &lt;th style="font-family: sans-serif;"&gt;&lt;strong&gt;Updated documents&lt;/strong&gt;&lt;/th&gt;
            &lt;th width="125px"&gt;&lt;/th&gt;
          &lt;/tr&gt;
        #set($cmap = $!gitlabgroovy.getChangedPages($spaces, $savedlist))
        #foreach($page in $cmap.keySet())
          #set($status = $cmap.get($page))
          #if($status.status!='N' &amp;&amp; $status.status!='A' &amp;&amp; $status.status!='F')
            #displayEntry($status)
          #end
        #end
        &lt;/table&gt;
        &lt;table cellpadding="0" cellspacing="0" border="0" style="margin-bottom: 0px"&gt;
          &lt;tr&gt;
            &lt;th width="20px"&gt;&lt;/th&gt;
            &lt;th width="20px"&gt;&lt;/th&gt;
            &lt;th style="font-family: sans-serif;"&gt;&lt;strong&gt;New documents&lt;/strong&gt;&lt;/th&gt;
            &lt;th width="125px"&gt;&lt;/th&gt;
          &lt;/tr&gt;
        #foreach($page in $cmap.keySet())
          #set($status = $cmap.get($page))
          #if($status.status=='N' || $status.status=='A')
            #displayEntry($status)
          #end
        #end
        &lt;/table&gt;
        &lt;table cellpadding="0" cellspacing="0" border="0"&gt;
          &lt;tr&gt;
            &lt;th width="20px"&gt;&lt;/th&gt;
            &lt;th width="20px"&gt;&lt;/th&gt;
            &lt;th style="font-family: sans-serif;"&gt;&lt;strong&gt;Minor format changes&lt;/strong&gt;&lt;/th&gt;
            &lt;th width="125px"&gt;&lt;/th&gt;
          &lt;/tr&gt;
        #foreach($page in $cmap.keySet())
          #set($status = $cmap.get($page))
          #if($status.status=='F')
            #displayEntry($status)
          #end
        #end
        &lt;/table&gt;
        #listActions()
      &lt;/form&gt;
    {{/html}}
  #elseif($request.export)
    #set($pagelist = $xwiki.arrayList)
    #foreach($page in $request.getParameterValues("page"))
      #set($ok = $pagelist.add($page))
    #end
    $gitlabgroovy.exportPages($doc.documentReference.name, $pagelist)
    #set($ok = $xcontext.setFinished(true))
  #elseif($request.update)
    #set($pagelist = $xwiki.arrayList)
    #foreach($page in $request.getParameterValues("page"))
      #set($ok = $pagelist.add({ "page" : $page, "sha" : $request.get("${page}_sha")}))
    #end
    #set($list = $gitlabgroovy.updatePages($pagelist,$spaces))

    $services.localization.render('gitlab.configsheet.pagesupdated')

    #foreach($page in $list.keySet())
      * $page
    #end

    [[$services.localization.render('gitlab.configsheet.backtolist')&gt;&gt;${doc.fullName}?action=list]] - [[$services.localization.render('gitlab.configsheet.backtocustom')&gt;&gt;${doc.fullName}?action=custom]]

  ## COMMIT ACTION with confirm
  #elseif($request.action=="commit" &amp;&amp; $request.confirm=="1")
    $services.localization.render('gitlab.configsheet.committingpages'):

    #set($pagelist = $xwiki.arrayList)
    #foreach($page in $request.getParameterValues("page"))
      * $page
      #set($ok = $pagelist.add($page))
    #end

    $gitlabgroovy.commitFiles($pagelist, $request.message, $!request.pom)

    $services.localization.render('gitlab.configsheet.committsuccessfull')


    [[$services.localization.render('gitlab.configsheet.backtolist')&gt;&gt;${doc.fullName}?action=list]] - [[$services.localization.render('gitlab.configsheet.backtocustom')&gt;&gt;${doc.fullName}?action=custom]]

  ## COMMIT ACTION before confirm
  #elseif($request.action=="commit")
    ## confirm commit
    $services.localization.render('gitlab.configsheet.confirmcommittingpage')

    {{html wiki=true}}
      &lt;form action="$doc.documentReference.name" method="post"&gt;
        &lt;input type="hidden" name="action" value="commit" /&gt;
        &lt;input type="hidden" name="confirm" value="1" /&gt;
        &lt;input type="hidden" name="spaces" value="$!{spaces}" /&gt;
        ## just pass the pages to commit further
        #foreach($page in $request.getParameterValues("page"))
          * $page
          &lt;input type="hidden" name="page" value="$!{page}" /&gt;
        #end

        $services.localization.render('gitlab.configsheet.commitmessage'):
        &lt;br /&gt;
        &lt;textarea name="message" rows="5" cols="80"&gt;
        &lt;/textarea&gt;
        &lt;br /&gt;
        &lt;input type="checkbox" name="pom" value="1" /&gt; $services.localization.render('gitlab.configsheet.commitpom')
        &lt;br /&gt;
        &lt;input type="submit" value="Commit" /&gt;
      &lt;/form&gt;
    {{/html}}
  ## VIEW STATUS ACTION
  #elseif($request.action=="status")

    $gitlabgroovy.getCommitStatus("|", "|", false)

  ## VIEW STATUS ACTION
  #elseif($request.action=="compare")
    #set($pagedoc = $xwiki.getDocument($request.page))
    #if($request.gitlablanguage)
      #set($pagedoc = $pagedoc.getTranslatedDocument($request.gitlablanguage))
    #end
    #if("1"=="$!{request.unformatted}")
      #set ($xmls = $gitlabgroovy.getXMLForDiff($pagedoc, $request.filePath, false))
    #else
      #set ($xmls = $gitlabgroovy.getXMLForDiff($pagedoc, $request.filePath, true))
    #end

    {{html clean="false"}}
      #unifiedDiff($xmls[0] $xmls[1])
    {{/html}}
  #elseif($request.action=="compare")
    {{html clean=false}}
      &lt;style type="text/css"&gt;
        .diffremoveword {
          background-color: #FFAAAA;
        }
        .diffaddword {
          background-color: #AAFFAA;
        }
      &lt;/style&gt;
      #set($pagedoc = $xwiki.getDocument($request.page))
      #if($request.gitlablanguage)
        #set($pagedoc = $pagedoc.getTranslatedDocument($request.gitlablanguage))
      #end
      #if("1"=="$!{request.unformatted}")
        $gitlabgroovy.showXMLDiff($pagedoc, $request.filePath, false)
      #else
        $gitlabgroovy.showXMLDiff($pagedoc, $request.filePath, true)
      #end
    {{/html}}

  ## OTHER ACTION
  #else

    [[$services.localization.render('gitlab.configsheet.listpages')&gt;&gt;${doc.fullName}?action=list]] - [[$services.localization.render('gitlab.configsheet.customlist')&gt;&gt;${doc.fullName}?action=custom]]
  #end

#end ## end set config failed
#end ## Programming right check
{{/velocity}}</content>
</xwikidoc>
